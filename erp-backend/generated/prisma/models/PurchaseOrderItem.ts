
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `PurchaseOrderItem` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums.ts"
import type * as Prisma from "../internal/prismaNamespace.ts"

/**
 * Model PurchaseOrderItem
 * 
 */
export type PurchaseOrderItemModel = runtime.Types.Result.DefaultSelection<Prisma.$PurchaseOrderItemPayload>

export type AggregatePurchaseOrderItem = {
  _count: PurchaseOrderItemCountAggregateOutputType | null
  _avg: PurchaseOrderItemAvgAggregateOutputType | null
  _sum: PurchaseOrderItemSumAggregateOutputType | null
  _min: PurchaseOrderItemMinAggregateOutputType | null
  _max: PurchaseOrderItemMaxAggregateOutputType | null
}

export type PurchaseOrderItemAvgAggregateOutputType = {
  quantityOrdered: runtime.Decimal | null
}

export type PurchaseOrderItemSumAggregateOutputType = {
  quantityOrdered: runtime.Decimal | null
}

export type PurchaseOrderItemMinAggregateOutputType = {
  id: string | null
  purchaseOrderId: string | null
  rawMaterialId: string | null
  quantityOrdered: runtime.Decimal | null
}

export type PurchaseOrderItemMaxAggregateOutputType = {
  id: string | null
  purchaseOrderId: string | null
  rawMaterialId: string | null
  quantityOrdered: runtime.Decimal | null
}

export type PurchaseOrderItemCountAggregateOutputType = {
  id: number
  purchaseOrderId: number
  rawMaterialId: number
  quantityOrdered: number
  _all: number
}


export type PurchaseOrderItemAvgAggregateInputType = {
  quantityOrdered?: true
}

export type PurchaseOrderItemSumAggregateInputType = {
  quantityOrdered?: true
}

export type PurchaseOrderItemMinAggregateInputType = {
  id?: true
  purchaseOrderId?: true
  rawMaterialId?: true
  quantityOrdered?: true
}

export type PurchaseOrderItemMaxAggregateInputType = {
  id?: true
  purchaseOrderId?: true
  rawMaterialId?: true
  quantityOrdered?: true
}

export type PurchaseOrderItemCountAggregateInputType = {
  id?: true
  purchaseOrderId?: true
  rawMaterialId?: true
  quantityOrdered?: true
  _all?: true
}

export type PurchaseOrderItemAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which PurchaseOrderItem to aggregate.
   */
  where?: Prisma.PurchaseOrderItemWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of PurchaseOrderItems to fetch.
   */
  orderBy?: Prisma.PurchaseOrderItemOrderByWithRelationInput | Prisma.PurchaseOrderItemOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.PurchaseOrderItemWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` PurchaseOrderItems from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` PurchaseOrderItems.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned PurchaseOrderItems
  **/
  _count?: true | PurchaseOrderItemCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: PurchaseOrderItemAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: PurchaseOrderItemSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: PurchaseOrderItemMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: PurchaseOrderItemMaxAggregateInputType
}

export type GetPurchaseOrderItemAggregateType<T extends PurchaseOrderItemAggregateArgs> = {
      [P in keyof T & keyof AggregatePurchaseOrderItem]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregatePurchaseOrderItem[P]>
    : Prisma.GetScalarType<T[P], AggregatePurchaseOrderItem[P]>
}




export type PurchaseOrderItemGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.PurchaseOrderItemWhereInput
  orderBy?: Prisma.PurchaseOrderItemOrderByWithAggregationInput | Prisma.PurchaseOrderItemOrderByWithAggregationInput[]
  by: Prisma.PurchaseOrderItemScalarFieldEnum[] | Prisma.PurchaseOrderItemScalarFieldEnum
  having?: Prisma.PurchaseOrderItemScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: PurchaseOrderItemCountAggregateInputType | true
  _avg?: PurchaseOrderItemAvgAggregateInputType
  _sum?: PurchaseOrderItemSumAggregateInputType
  _min?: PurchaseOrderItemMinAggregateInputType
  _max?: PurchaseOrderItemMaxAggregateInputType
}

export type PurchaseOrderItemGroupByOutputType = {
  id: string
  purchaseOrderId: string
  rawMaterialId: string
  quantityOrdered: runtime.Decimal
  _count: PurchaseOrderItemCountAggregateOutputType | null
  _avg: PurchaseOrderItemAvgAggregateOutputType | null
  _sum: PurchaseOrderItemSumAggregateOutputType | null
  _min: PurchaseOrderItemMinAggregateOutputType | null
  _max: PurchaseOrderItemMaxAggregateOutputType | null
}

type GetPurchaseOrderItemGroupByPayload<T extends PurchaseOrderItemGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<PurchaseOrderItemGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof PurchaseOrderItemGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], PurchaseOrderItemGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], PurchaseOrderItemGroupByOutputType[P]>
      }
    >
  >



export type PurchaseOrderItemWhereInput = {
  AND?: Prisma.PurchaseOrderItemWhereInput | Prisma.PurchaseOrderItemWhereInput[]
  OR?: Prisma.PurchaseOrderItemWhereInput[]
  NOT?: Prisma.PurchaseOrderItemWhereInput | Prisma.PurchaseOrderItemWhereInput[]
  id?: Prisma.StringFilter<"PurchaseOrderItem"> | string
  purchaseOrderId?: Prisma.StringFilter<"PurchaseOrderItem"> | string
  rawMaterialId?: Prisma.StringFilter<"PurchaseOrderItem"> | string
  quantityOrdered?: Prisma.DecimalFilter<"PurchaseOrderItem"> | runtime.Decimal | runtime.DecimalJsLike | number | string
  purchaseOrder?: Prisma.XOR<Prisma.PurchaseOrderScalarRelationFilter, Prisma.PurchaseOrderWhereInput>
}

export type PurchaseOrderItemOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  purchaseOrderId?: Prisma.SortOrder
  rawMaterialId?: Prisma.SortOrder
  quantityOrdered?: Prisma.SortOrder
  purchaseOrder?: Prisma.PurchaseOrderOrderByWithRelationInput
}

export type PurchaseOrderItemWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.PurchaseOrderItemWhereInput | Prisma.PurchaseOrderItemWhereInput[]
  OR?: Prisma.PurchaseOrderItemWhereInput[]
  NOT?: Prisma.PurchaseOrderItemWhereInput | Prisma.PurchaseOrderItemWhereInput[]
  purchaseOrderId?: Prisma.StringFilter<"PurchaseOrderItem"> | string
  rawMaterialId?: Prisma.StringFilter<"PurchaseOrderItem"> | string
  quantityOrdered?: Prisma.DecimalFilter<"PurchaseOrderItem"> | runtime.Decimal | runtime.DecimalJsLike | number | string
  purchaseOrder?: Prisma.XOR<Prisma.PurchaseOrderScalarRelationFilter, Prisma.PurchaseOrderWhereInput>
}, "id">

export type PurchaseOrderItemOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  purchaseOrderId?: Prisma.SortOrder
  rawMaterialId?: Prisma.SortOrder
  quantityOrdered?: Prisma.SortOrder
  _count?: Prisma.PurchaseOrderItemCountOrderByAggregateInput
  _avg?: Prisma.PurchaseOrderItemAvgOrderByAggregateInput
  _max?: Prisma.PurchaseOrderItemMaxOrderByAggregateInput
  _min?: Prisma.PurchaseOrderItemMinOrderByAggregateInput
  _sum?: Prisma.PurchaseOrderItemSumOrderByAggregateInput
}

export type PurchaseOrderItemScalarWhereWithAggregatesInput = {
  AND?: Prisma.PurchaseOrderItemScalarWhereWithAggregatesInput | Prisma.PurchaseOrderItemScalarWhereWithAggregatesInput[]
  OR?: Prisma.PurchaseOrderItemScalarWhereWithAggregatesInput[]
  NOT?: Prisma.PurchaseOrderItemScalarWhereWithAggregatesInput | Prisma.PurchaseOrderItemScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"PurchaseOrderItem"> | string
  purchaseOrderId?: Prisma.StringWithAggregatesFilter<"PurchaseOrderItem"> | string
  rawMaterialId?: Prisma.StringWithAggregatesFilter<"PurchaseOrderItem"> | string
  quantityOrdered?: Prisma.DecimalWithAggregatesFilter<"PurchaseOrderItem"> | runtime.Decimal | runtime.DecimalJsLike | number | string
}

export type PurchaseOrderItemCreateInput = {
  id?: string
  rawMaterialId: string
  quantityOrdered: runtime.Decimal | runtime.DecimalJsLike | number | string
  purchaseOrder: Prisma.PurchaseOrderCreateNestedOneWithoutItemsInput
}

export type PurchaseOrderItemUncheckedCreateInput = {
  id?: string
  purchaseOrderId: string
  rawMaterialId: string
  quantityOrdered: runtime.Decimal | runtime.DecimalJsLike | number | string
}

export type PurchaseOrderItemUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  rawMaterialId?: Prisma.StringFieldUpdateOperationsInput | string
  quantityOrdered?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  purchaseOrder?: Prisma.PurchaseOrderUpdateOneRequiredWithoutItemsNestedInput
}

export type PurchaseOrderItemUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  purchaseOrderId?: Prisma.StringFieldUpdateOperationsInput | string
  rawMaterialId?: Prisma.StringFieldUpdateOperationsInput | string
  quantityOrdered?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
}

export type PurchaseOrderItemCreateManyInput = {
  id?: string
  purchaseOrderId: string
  rawMaterialId: string
  quantityOrdered: runtime.Decimal | runtime.DecimalJsLike | number | string
}

export type PurchaseOrderItemUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  rawMaterialId?: Prisma.StringFieldUpdateOperationsInput | string
  quantityOrdered?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
}

export type PurchaseOrderItemUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  purchaseOrderId?: Prisma.StringFieldUpdateOperationsInput | string
  rawMaterialId?: Prisma.StringFieldUpdateOperationsInput | string
  quantityOrdered?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
}

export type PurchaseOrderItemListRelationFilter = {
  every?: Prisma.PurchaseOrderItemWhereInput
  some?: Prisma.PurchaseOrderItemWhereInput
  none?: Prisma.PurchaseOrderItemWhereInput
}

export type PurchaseOrderItemOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type PurchaseOrderItemCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  purchaseOrderId?: Prisma.SortOrder
  rawMaterialId?: Prisma.SortOrder
  quantityOrdered?: Prisma.SortOrder
}

export type PurchaseOrderItemAvgOrderByAggregateInput = {
  quantityOrdered?: Prisma.SortOrder
}

export type PurchaseOrderItemMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  purchaseOrderId?: Prisma.SortOrder
  rawMaterialId?: Prisma.SortOrder
  quantityOrdered?: Prisma.SortOrder
}

export type PurchaseOrderItemMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  purchaseOrderId?: Prisma.SortOrder
  rawMaterialId?: Prisma.SortOrder
  quantityOrdered?: Prisma.SortOrder
}

export type PurchaseOrderItemSumOrderByAggregateInput = {
  quantityOrdered?: Prisma.SortOrder
}

export type PurchaseOrderItemCreateNestedManyWithoutPurchaseOrderInput = {
  create?: Prisma.XOR<Prisma.PurchaseOrderItemCreateWithoutPurchaseOrderInput, Prisma.PurchaseOrderItemUncheckedCreateWithoutPurchaseOrderInput> | Prisma.PurchaseOrderItemCreateWithoutPurchaseOrderInput[] | Prisma.PurchaseOrderItemUncheckedCreateWithoutPurchaseOrderInput[]
  connectOrCreate?: Prisma.PurchaseOrderItemCreateOrConnectWithoutPurchaseOrderInput | Prisma.PurchaseOrderItemCreateOrConnectWithoutPurchaseOrderInput[]
  createMany?: Prisma.PurchaseOrderItemCreateManyPurchaseOrderInputEnvelope
  connect?: Prisma.PurchaseOrderItemWhereUniqueInput | Prisma.PurchaseOrderItemWhereUniqueInput[]
}

export type PurchaseOrderItemUncheckedCreateNestedManyWithoutPurchaseOrderInput = {
  create?: Prisma.XOR<Prisma.PurchaseOrderItemCreateWithoutPurchaseOrderInput, Prisma.PurchaseOrderItemUncheckedCreateWithoutPurchaseOrderInput> | Prisma.PurchaseOrderItemCreateWithoutPurchaseOrderInput[] | Prisma.PurchaseOrderItemUncheckedCreateWithoutPurchaseOrderInput[]
  connectOrCreate?: Prisma.PurchaseOrderItemCreateOrConnectWithoutPurchaseOrderInput | Prisma.PurchaseOrderItemCreateOrConnectWithoutPurchaseOrderInput[]
  createMany?: Prisma.PurchaseOrderItemCreateManyPurchaseOrderInputEnvelope
  connect?: Prisma.PurchaseOrderItemWhereUniqueInput | Prisma.PurchaseOrderItemWhereUniqueInput[]
}

export type PurchaseOrderItemUpdateManyWithoutPurchaseOrderNestedInput = {
  create?: Prisma.XOR<Prisma.PurchaseOrderItemCreateWithoutPurchaseOrderInput, Prisma.PurchaseOrderItemUncheckedCreateWithoutPurchaseOrderInput> | Prisma.PurchaseOrderItemCreateWithoutPurchaseOrderInput[] | Prisma.PurchaseOrderItemUncheckedCreateWithoutPurchaseOrderInput[]
  connectOrCreate?: Prisma.PurchaseOrderItemCreateOrConnectWithoutPurchaseOrderInput | Prisma.PurchaseOrderItemCreateOrConnectWithoutPurchaseOrderInput[]
  upsert?: Prisma.PurchaseOrderItemUpsertWithWhereUniqueWithoutPurchaseOrderInput | Prisma.PurchaseOrderItemUpsertWithWhereUniqueWithoutPurchaseOrderInput[]
  createMany?: Prisma.PurchaseOrderItemCreateManyPurchaseOrderInputEnvelope
  set?: Prisma.PurchaseOrderItemWhereUniqueInput | Prisma.PurchaseOrderItemWhereUniqueInput[]
  disconnect?: Prisma.PurchaseOrderItemWhereUniqueInput | Prisma.PurchaseOrderItemWhereUniqueInput[]
  delete?: Prisma.PurchaseOrderItemWhereUniqueInput | Prisma.PurchaseOrderItemWhereUniqueInput[]
  connect?: Prisma.PurchaseOrderItemWhereUniqueInput | Prisma.PurchaseOrderItemWhereUniqueInput[]
  update?: Prisma.PurchaseOrderItemUpdateWithWhereUniqueWithoutPurchaseOrderInput | Prisma.PurchaseOrderItemUpdateWithWhereUniqueWithoutPurchaseOrderInput[]
  updateMany?: Prisma.PurchaseOrderItemUpdateManyWithWhereWithoutPurchaseOrderInput | Prisma.PurchaseOrderItemUpdateManyWithWhereWithoutPurchaseOrderInput[]
  deleteMany?: Prisma.PurchaseOrderItemScalarWhereInput | Prisma.PurchaseOrderItemScalarWhereInput[]
}

export type PurchaseOrderItemUncheckedUpdateManyWithoutPurchaseOrderNestedInput = {
  create?: Prisma.XOR<Prisma.PurchaseOrderItemCreateWithoutPurchaseOrderInput, Prisma.PurchaseOrderItemUncheckedCreateWithoutPurchaseOrderInput> | Prisma.PurchaseOrderItemCreateWithoutPurchaseOrderInput[] | Prisma.PurchaseOrderItemUncheckedCreateWithoutPurchaseOrderInput[]
  connectOrCreate?: Prisma.PurchaseOrderItemCreateOrConnectWithoutPurchaseOrderInput | Prisma.PurchaseOrderItemCreateOrConnectWithoutPurchaseOrderInput[]
  upsert?: Prisma.PurchaseOrderItemUpsertWithWhereUniqueWithoutPurchaseOrderInput | Prisma.PurchaseOrderItemUpsertWithWhereUniqueWithoutPurchaseOrderInput[]
  createMany?: Prisma.PurchaseOrderItemCreateManyPurchaseOrderInputEnvelope
  set?: Prisma.PurchaseOrderItemWhereUniqueInput | Prisma.PurchaseOrderItemWhereUniqueInput[]
  disconnect?: Prisma.PurchaseOrderItemWhereUniqueInput | Prisma.PurchaseOrderItemWhereUniqueInput[]
  delete?: Prisma.PurchaseOrderItemWhereUniqueInput | Prisma.PurchaseOrderItemWhereUniqueInput[]
  connect?: Prisma.PurchaseOrderItemWhereUniqueInput | Prisma.PurchaseOrderItemWhereUniqueInput[]
  update?: Prisma.PurchaseOrderItemUpdateWithWhereUniqueWithoutPurchaseOrderInput | Prisma.PurchaseOrderItemUpdateWithWhereUniqueWithoutPurchaseOrderInput[]
  updateMany?: Prisma.PurchaseOrderItemUpdateManyWithWhereWithoutPurchaseOrderInput | Prisma.PurchaseOrderItemUpdateManyWithWhereWithoutPurchaseOrderInput[]
  deleteMany?: Prisma.PurchaseOrderItemScalarWhereInput | Prisma.PurchaseOrderItemScalarWhereInput[]
}

export type PurchaseOrderItemCreateWithoutPurchaseOrderInput = {
  id?: string
  rawMaterialId: string
  quantityOrdered: runtime.Decimal | runtime.DecimalJsLike | number | string
}

export type PurchaseOrderItemUncheckedCreateWithoutPurchaseOrderInput = {
  id?: string
  rawMaterialId: string
  quantityOrdered: runtime.Decimal | runtime.DecimalJsLike | number | string
}

export type PurchaseOrderItemCreateOrConnectWithoutPurchaseOrderInput = {
  where: Prisma.PurchaseOrderItemWhereUniqueInput
  create: Prisma.XOR<Prisma.PurchaseOrderItemCreateWithoutPurchaseOrderInput, Prisma.PurchaseOrderItemUncheckedCreateWithoutPurchaseOrderInput>
}

export type PurchaseOrderItemCreateManyPurchaseOrderInputEnvelope = {
  data: Prisma.PurchaseOrderItemCreateManyPurchaseOrderInput | Prisma.PurchaseOrderItemCreateManyPurchaseOrderInput[]
  skipDuplicates?: boolean
}

export type PurchaseOrderItemUpsertWithWhereUniqueWithoutPurchaseOrderInput = {
  where: Prisma.PurchaseOrderItemWhereUniqueInput
  update: Prisma.XOR<Prisma.PurchaseOrderItemUpdateWithoutPurchaseOrderInput, Prisma.PurchaseOrderItemUncheckedUpdateWithoutPurchaseOrderInput>
  create: Prisma.XOR<Prisma.PurchaseOrderItemCreateWithoutPurchaseOrderInput, Prisma.PurchaseOrderItemUncheckedCreateWithoutPurchaseOrderInput>
}

export type PurchaseOrderItemUpdateWithWhereUniqueWithoutPurchaseOrderInput = {
  where: Prisma.PurchaseOrderItemWhereUniqueInput
  data: Prisma.XOR<Prisma.PurchaseOrderItemUpdateWithoutPurchaseOrderInput, Prisma.PurchaseOrderItemUncheckedUpdateWithoutPurchaseOrderInput>
}

export type PurchaseOrderItemUpdateManyWithWhereWithoutPurchaseOrderInput = {
  where: Prisma.PurchaseOrderItemScalarWhereInput
  data: Prisma.XOR<Prisma.PurchaseOrderItemUpdateManyMutationInput, Prisma.PurchaseOrderItemUncheckedUpdateManyWithoutPurchaseOrderInput>
}

export type PurchaseOrderItemScalarWhereInput = {
  AND?: Prisma.PurchaseOrderItemScalarWhereInput | Prisma.PurchaseOrderItemScalarWhereInput[]
  OR?: Prisma.PurchaseOrderItemScalarWhereInput[]
  NOT?: Prisma.PurchaseOrderItemScalarWhereInput | Prisma.PurchaseOrderItemScalarWhereInput[]
  id?: Prisma.StringFilter<"PurchaseOrderItem"> | string
  purchaseOrderId?: Prisma.StringFilter<"PurchaseOrderItem"> | string
  rawMaterialId?: Prisma.StringFilter<"PurchaseOrderItem"> | string
  quantityOrdered?: Prisma.DecimalFilter<"PurchaseOrderItem"> | runtime.Decimal | runtime.DecimalJsLike | number | string
}

export type PurchaseOrderItemCreateManyPurchaseOrderInput = {
  id?: string
  rawMaterialId: string
  quantityOrdered: runtime.Decimal | runtime.DecimalJsLike | number | string
}

export type PurchaseOrderItemUpdateWithoutPurchaseOrderInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  rawMaterialId?: Prisma.StringFieldUpdateOperationsInput | string
  quantityOrdered?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
}

export type PurchaseOrderItemUncheckedUpdateWithoutPurchaseOrderInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  rawMaterialId?: Prisma.StringFieldUpdateOperationsInput | string
  quantityOrdered?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
}

export type PurchaseOrderItemUncheckedUpdateManyWithoutPurchaseOrderInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  rawMaterialId?: Prisma.StringFieldUpdateOperationsInput | string
  quantityOrdered?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
}



export type PurchaseOrderItemSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  purchaseOrderId?: boolean
  rawMaterialId?: boolean
  quantityOrdered?: boolean
  purchaseOrder?: boolean | Prisma.PurchaseOrderDefaultArgs<ExtArgs>
}, ExtArgs["result"]["purchaseOrderItem"]>

export type PurchaseOrderItemSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  purchaseOrderId?: boolean
  rawMaterialId?: boolean
  quantityOrdered?: boolean
  purchaseOrder?: boolean | Prisma.PurchaseOrderDefaultArgs<ExtArgs>
}, ExtArgs["result"]["purchaseOrderItem"]>

export type PurchaseOrderItemSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  purchaseOrderId?: boolean
  rawMaterialId?: boolean
  quantityOrdered?: boolean
  purchaseOrder?: boolean | Prisma.PurchaseOrderDefaultArgs<ExtArgs>
}, ExtArgs["result"]["purchaseOrderItem"]>

export type PurchaseOrderItemSelectScalar = {
  id?: boolean
  purchaseOrderId?: boolean
  rawMaterialId?: boolean
  quantityOrdered?: boolean
}

export type PurchaseOrderItemOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "purchaseOrderId" | "rawMaterialId" | "quantityOrdered", ExtArgs["result"]["purchaseOrderItem"]>
export type PurchaseOrderItemInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  purchaseOrder?: boolean | Prisma.PurchaseOrderDefaultArgs<ExtArgs>
}
export type PurchaseOrderItemIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  purchaseOrder?: boolean | Prisma.PurchaseOrderDefaultArgs<ExtArgs>
}
export type PurchaseOrderItemIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  purchaseOrder?: boolean | Prisma.PurchaseOrderDefaultArgs<ExtArgs>
}

export type $PurchaseOrderItemPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "PurchaseOrderItem"
  objects: {
    purchaseOrder: Prisma.$PurchaseOrderPayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    purchaseOrderId: string
    rawMaterialId: string
    quantityOrdered: runtime.Decimal
  }, ExtArgs["result"]["purchaseOrderItem"]>
  composites: {}
}

export type PurchaseOrderItemGetPayload<S extends boolean | null | undefined | PurchaseOrderItemDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$PurchaseOrderItemPayload, S>

export type PurchaseOrderItemCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<PurchaseOrderItemFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: PurchaseOrderItemCountAggregateInputType | true
  }

export interface PurchaseOrderItemDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PurchaseOrderItem'], meta: { name: 'PurchaseOrderItem' } }
  /**
   * Find zero or one PurchaseOrderItem that matches the filter.
   * @param {PurchaseOrderItemFindUniqueArgs} args - Arguments to find a PurchaseOrderItem
   * @example
   * // Get one PurchaseOrderItem
   * const purchaseOrderItem = await prisma.purchaseOrderItem.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends PurchaseOrderItemFindUniqueArgs>(args: Prisma.SelectSubset<T, PurchaseOrderItemFindUniqueArgs<ExtArgs>>): Prisma.Prisma__PurchaseOrderItemClient<runtime.Types.Result.GetResult<Prisma.$PurchaseOrderItemPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one PurchaseOrderItem that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {PurchaseOrderItemFindUniqueOrThrowArgs} args - Arguments to find a PurchaseOrderItem
   * @example
   * // Get one PurchaseOrderItem
   * const purchaseOrderItem = await prisma.purchaseOrderItem.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends PurchaseOrderItemFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, PurchaseOrderItemFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__PurchaseOrderItemClient<runtime.Types.Result.GetResult<Prisma.$PurchaseOrderItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first PurchaseOrderItem that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PurchaseOrderItemFindFirstArgs} args - Arguments to find a PurchaseOrderItem
   * @example
   * // Get one PurchaseOrderItem
   * const purchaseOrderItem = await prisma.purchaseOrderItem.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends PurchaseOrderItemFindFirstArgs>(args?: Prisma.SelectSubset<T, PurchaseOrderItemFindFirstArgs<ExtArgs>>): Prisma.Prisma__PurchaseOrderItemClient<runtime.Types.Result.GetResult<Prisma.$PurchaseOrderItemPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first PurchaseOrderItem that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PurchaseOrderItemFindFirstOrThrowArgs} args - Arguments to find a PurchaseOrderItem
   * @example
   * // Get one PurchaseOrderItem
   * const purchaseOrderItem = await prisma.purchaseOrderItem.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends PurchaseOrderItemFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, PurchaseOrderItemFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__PurchaseOrderItemClient<runtime.Types.Result.GetResult<Prisma.$PurchaseOrderItemPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more PurchaseOrderItems that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PurchaseOrderItemFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all PurchaseOrderItems
   * const purchaseOrderItems = await prisma.purchaseOrderItem.findMany()
   * 
   * // Get first 10 PurchaseOrderItems
   * const purchaseOrderItems = await prisma.purchaseOrderItem.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const purchaseOrderItemWithIdOnly = await prisma.purchaseOrderItem.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends PurchaseOrderItemFindManyArgs>(args?: Prisma.SelectSubset<T, PurchaseOrderItemFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$PurchaseOrderItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a PurchaseOrderItem.
   * @param {PurchaseOrderItemCreateArgs} args - Arguments to create a PurchaseOrderItem.
   * @example
   * // Create one PurchaseOrderItem
   * const PurchaseOrderItem = await prisma.purchaseOrderItem.create({
   *   data: {
   *     // ... data to create a PurchaseOrderItem
   *   }
   * })
   * 
   */
  create<T extends PurchaseOrderItemCreateArgs>(args: Prisma.SelectSubset<T, PurchaseOrderItemCreateArgs<ExtArgs>>): Prisma.Prisma__PurchaseOrderItemClient<runtime.Types.Result.GetResult<Prisma.$PurchaseOrderItemPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many PurchaseOrderItems.
   * @param {PurchaseOrderItemCreateManyArgs} args - Arguments to create many PurchaseOrderItems.
   * @example
   * // Create many PurchaseOrderItems
   * const purchaseOrderItem = await prisma.purchaseOrderItem.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends PurchaseOrderItemCreateManyArgs>(args?: Prisma.SelectSubset<T, PurchaseOrderItemCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many PurchaseOrderItems and returns the data saved in the database.
   * @param {PurchaseOrderItemCreateManyAndReturnArgs} args - Arguments to create many PurchaseOrderItems.
   * @example
   * // Create many PurchaseOrderItems
   * const purchaseOrderItem = await prisma.purchaseOrderItem.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many PurchaseOrderItems and only return the `id`
   * const purchaseOrderItemWithIdOnly = await prisma.purchaseOrderItem.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends PurchaseOrderItemCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, PurchaseOrderItemCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$PurchaseOrderItemPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a PurchaseOrderItem.
   * @param {PurchaseOrderItemDeleteArgs} args - Arguments to delete one PurchaseOrderItem.
   * @example
   * // Delete one PurchaseOrderItem
   * const PurchaseOrderItem = await prisma.purchaseOrderItem.delete({
   *   where: {
   *     // ... filter to delete one PurchaseOrderItem
   *   }
   * })
   * 
   */
  delete<T extends PurchaseOrderItemDeleteArgs>(args: Prisma.SelectSubset<T, PurchaseOrderItemDeleteArgs<ExtArgs>>): Prisma.Prisma__PurchaseOrderItemClient<runtime.Types.Result.GetResult<Prisma.$PurchaseOrderItemPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one PurchaseOrderItem.
   * @param {PurchaseOrderItemUpdateArgs} args - Arguments to update one PurchaseOrderItem.
   * @example
   * // Update one PurchaseOrderItem
   * const purchaseOrderItem = await prisma.purchaseOrderItem.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends PurchaseOrderItemUpdateArgs>(args: Prisma.SelectSubset<T, PurchaseOrderItemUpdateArgs<ExtArgs>>): Prisma.Prisma__PurchaseOrderItemClient<runtime.Types.Result.GetResult<Prisma.$PurchaseOrderItemPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more PurchaseOrderItems.
   * @param {PurchaseOrderItemDeleteManyArgs} args - Arguments to filter PurchaseOrderItems to delete.
   * @example
   * // Delete a few PurchaseOrderItems
   * const { count } = await prisma.purchaseOrderItem.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends PurchaseOrderItemDeleteManyArgs>(args?: Prisma.SelectSubset<T, PurchaseOrderItemDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more PurchaseOrderItems.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PurchaseOrderItemUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many PurchaseOrderItems
   * const purchaseOrderItem = await prisma.purchaseOrderItem.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends PurchaseOrderItemUpdateManyArgs>(args: Prisma.SelectSubset<T, PurchaseOrderItemUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more PurchaseOrderItems and returns the data updated in the database.
   * @param {PurchaseOrderItemUpdateManyAndReturnArgs} args - Arguments to update many PurchaseOrderItems.
   * @example
   * // Update many PurchaseOrderItems
   * const purchaseOrderItem = await prisma.purchaseOrderItem.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more PurchaseOrderItems and only return the `id`
   * const purchaseOrderItemWithIdOnly = await prisma.purchaseOrderItem.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends PurchaseOrderItemUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, PurchaseOrderItemUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$PurchaseOrderItemPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one PurchaseOrderItem.
   * @param {PurchaseOrderItemUpsertArgs} args - Arguments to update or create a PurchaseOrderItem.
   * @example
   * // Update or create a PurchaseOrderItem
   * const purchaseOrderItem = await prisma.purchaseOrderItem.upsert({
   *   create: {
   *     // ... data to create a PurchaseOrderItem
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the PurchaseOrderItem we want to update
   *   }
   * })
   */
  upsert<T extends PurchaseOrderItemUpsertArgs>(args: Prisma.SelectSubset<T, PurchaseOrderItemUpsertArgs<ExtArgs>>): Prisma.Prisma__PurchaseOrderItemClient<runtime.Types.Result.GetResult<Prisma.$PurchaseOrderItemPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of PurchaseOrderItems.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PurchaseOrderItemCountArgs} args - Arguments to filter PurchaseOrderItems to count.
   * @example
   * // Count the number of PurchaseOrderItems
   * const count = await prisma.purchaseOrderItem.count({
   *   where: {
   *     // ... the filter for the PurchaseOrderItems we want to count
   *   }
   * })
  **/
  count<T extends PurchaseOrderItemCountArgs>(
    args?: Prisma.Subset<T, PurchaseOrderItemCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], PurchaseOrderItemCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a PurchaseOrderItem.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PurchaseOrderItemAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends PurchaseOrderItemAggregateArgs>(args: Prisma.Subset<T, PurchaseOrderItemAggregateArgs>): Prisma.PrismaPromise<GetPurchaseOrderItemAggregateType<T>>

  /**
   * Group by PurchaseOrderItem.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PurchaseOrderItemGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends PurchaseOrderItemGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: PurchaseOrderItemGroupByArgs['orderBy'] }
      : { orderBy?: PurchaseOrderItemGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, PurchaseOrderItemGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPurchaseOrderItemGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the PurchaseOrderItem model
 */
readonly fields: PurchaseOrderItemFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for PurchaseOrderItem.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__PurchaseOrderItemClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  purchaseOrder<T extends Prisma.PurchaseOrderDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.PurchaseOrderDefaultArgs<ExtArgs>>): Prisma.Prisma__PurchaseOrderClient<runtime.Types.Result.GetResult<Prisma.$PurchaseOrderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the PurchaseOrderItem model
 */
export interface PurchaseOrderItemFieldRefs {
  readonly id: Prisma.FieldRef<"PurchaseOrderItem", 'String'>
  readonly purchaseOrderId: Prisma.FieldRef<"PurchaseOrderItem", 'String'>
  readonly rawMaterialId: Prisma.FieldRef<"PurchaseOrderItem", 'String'>
  readonly quantityOrdered: Prisma.FieldRef<"PurchaseOrderItem", 'Decimal'>
}
    

// Custom InputTypes
/**
 * PurchaseOrderItem findUnique
 */
export type PurchaseOrderItemFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PurchaseOrderItem
   */
  select?: Prisma.PurchaseOrderItemSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PurchaseOrderItem
   */
  omit?: Prisma.PurchaseOrderItemOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PurchaseOrderItemInclude<ExtArgs> | null
  /**
   * Filter, which PurchaseOrderItem to fetch.
   */
  where: Prisma.PurchaseOrderItemWhereUniqueInput
}

/**
 * PurchaseOrderItem findUniqueOrThrow
 */
export type PurchaseOrderItemFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PurchaseOrderItem
   */
  select?: Prisma.PurchaseOrderItemSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PurchaseOrderItem
   */
  omit?: Prisma.PurchaseOrderItemOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PurchaseOrderItemInclude<ExtArgs> | null
  /**
   * Filter, which PurchaseOrderItem to fetch.
   */
  where: Prisma.PurchaseOrderItemWhereUniqueInput
}

/**
 * PurchaseOrderItem findFirst
 */
export type PurchaseOrderItemFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PurchaseOrderItem
   */
  select?: Prisma.PurchaseOrderItemSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PurchaseOrderItem
   */
  omit?: Prisma.PurchaseOrderItemOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PurchaseOrderItemInclude<ExtArgs> | null
  /**
   * Filter, which PurchaseOrderItem to fetch.
   */
  where?: Prisma.PurchaseOrderItemWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of PurchaseOrderItems to fetch.
   */
  orderBy?: Prisma.PurchaseOrderItemOrderByWithRelationInput | Prisma.PurchaseOrderItemOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for PurchaseOrderItems.
   */
  cursor?: Prisma.PurchaseOrderItemWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` PurchaseOrderItems from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` PurchaseOrderItems.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of PurchaseOrderItems.
   */
  distinct?: Prisma.PurchaseOrderItemScalarFieldEnum | Prisma.PurchaseOrderItemScalarFieldEnum[]
}

/**
 * PurchaseOrderItem findFirstOrThrow
 */
export type PurchaseOrderItemFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PurchaseOrderItem
   */
  select?: Prisma.PurchaseOrderItemSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PurchaseOrderItem
   */
  omit?: Prisma.PurchaseOrderItemOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PurchaseOrderItemInclude<ExtArgs> | null
  /**
   * Filter, which PurchaseOrderItem to fetch.
   */
  where?: Prisma.PurchaseOrderItemWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of PurchaseOrderItems to fetch.
   */
  orderBy?: Prisma.PurchaseOrderItemOrderByWithRelationInput | Prisma.PurchaseOrderItemOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for PurchaseOrderItems.
   */
  cursor?: Prisma.PurchaseOrderItemWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` PurchaseOrderItems from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` PurchaseOrderItems.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of PurchaseOrderItems.
   */
  distinct?: Prisma.PurchaseOrderItemScalarFieldEnum | Prisma.PurchaseOrderItemScalarFieldEnum[]
}

/**
 * PurchaseOrderItem findMany
 */
export type PurchaseOrderItemFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PurchaseOrderItem
   */
  select?: Prisma.PurchaseOrderItemSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PurchaseOrderItem
   */
  omit?: Prisma.PurchaseOrderItemOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PurchaseOrderItemInclude<ExtArgs> | null
  /**
   * Filter, which PurchaseOrderItems to fetch.
   */
  where?: Prisma.PurchaseOrderItemWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of PurchaseOrderItems to fetch.
   */
  orderBy?: Prisma.PurchaseOrderItemOrderByWithRelationInput | Prisma.PurchaseOrderItemOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing PurchaseOrderItems.
   */
  cursor?: Prisma.PurchaseOrderItemWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` PurchaseOrderItems from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` PurchaseOrderItems.
   */
  skip?: number
  distinct?: Prisma.PurchaseOrderItemScalarFieldEnum | Prisma.PurchaseOrderItemScalarFieldEnum[]
}

/**
 * PurchaseOrderItem create
 */
export type PurchaseOrderItemCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PurchaseOrderItem
   */
  select?: Prisma.PurchaseOrderItemSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PurchaseOrderItem
   */
  omit?: Prisma.PurchaseOrderItemOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PurchaseOrderItemInclude<ExtArgs> | null
  /**
   * The data needed to create a PurchaseOrderItem.
   */
  data: Prisma.XOR<Prisma.PurchaseOrderItemCreateInput, Prisma.PurchaseOrderItemUncheckedCreateInput>
}

/**
 * PurchaseOrderItem createMany
 */
export type PurchaseOrderItemCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many PurchaseOrderItems.
   */
  data: Prisma.PurchaseOrderItemCreateManyInput | Prisma.PurchaseOrderItemCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * PurchaseOrderItem createManyAndReturn
 */
export type PurchaseOrderItemCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PurchaseOrderItem
   */
  select?: Prisma.PurchaseOrderItemSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the PurchaseOrderItem
   */
  omit?: Prisma.PurchaseOrderItemOmit<ExtArgs> | null
  /**
   * The data used to create many PurchaseOrderItems.
   */
  data: Prisma.PurchaseOrderItemCreateManyInput | Prisma.PurchaseOrderItemCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PurchaseOrderItemIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * PurchaseOrderItem update
 */
export type PurchaseOrderItemUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PurchaseOrderItem
   */
  select?: Prisma.PurchaseOrderItemSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PurchaseOrderItem
   */
  omit?: Prisma.PurchaseOrderItemOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PurchaseOrderItemInclude<ExtArgs> | null
  /**
   * The data needed to update a PurchaseOrderItem.
   */
  data: Prisma.XOR<Prisma.PurchaseOrderItemUpdateInput, Prisma.PurchaseOrderItemUncheckedUpdateInput>
  /**
   * Choose, which PurchaseOrderItem to update.
   */
  where: Prisma.PurchaseOrderItemWhereUniqueInput
}

/**
 * PurchaseOrderItem updateMany
 */
export type PurchaseOrderItemUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update PurchaseOrderItems.
   */
  data: Prisma.XOR<Prisma.PurchaseOrderItemUpdateManyMutationInput, Prisma.PurchaseOrderItemUncheckedUpdateManyInput>
  /**
   * Filter which PurchaseOrderItems to update
   */
  where?: Prisma.PurchaseOrderItemWhereInput
  /**
   * Limit how many PurchaseOrderItems to update.
   */
  limit?: number
}

/**
 * PurchaseOrderItem updateManyAndReturn
 */
export type PurchaseOrderItemUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PurchaseOrderItem
   */
  select?: Prisma.PurchaseOrderItemSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the PurchaseOrderItem
   */
  omit?: Prisma.PurchaseOrderItemOmit<ExtArgs> | null
  /**
   * The data used to update PurchaseOrderItems.
   */
  data: Prisma.XOR<Prisma.PurchaseOrderItemUpdateManyMutationInput, Prisma.PurchaseOrderItemUncheckedUpdateManyInput>
  /**
   * Filter which PurchaseOrderItems to update
   */
  where?: Prisma.PurchaseOrderItemWhereInput
  /**
   * Limit how many PurchaseOrderItems to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PurchaseOrderItemIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * PurchaseOrderItem upsert
 */
export type PurchaseOrderItemUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PurchaseOrderItem
   */
  select?: Prisma.PurchaseOrderItemSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PurchaseOrderItem
   */
  omit?: Prisma.PurchaseOrderItemOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PurchaseOrderItemInclude<ExtArgs> | null
  /**
   * The filter to search for the PurchaseOrderItem to update in case it exists.
   */
  where: Prisma.PurchaseOrderItemWhereUniqueInput
  /**
   * In case the PurchaseOrderItem found by the `where` argument doesn't exist, create a new PurchaseOrderItem with this data.
   */
  create: Prisma.XOR<Prisma.PurchaseOrderItemCreateInput, Prisma.PurchaseOrderItemUncheckedCreateInput>
  /**
   * In case the PurchaseOrderItem was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.PurchaseOrderItemUpdateInput, Prisma.PurchaseOrderItemUncheckedUpdateInput>
}

/**
 * PurchaseOrderItem delete
 */
export type PurchaseOrderItemDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PurchaseOrderItem
   */
  select?: Prisma.PurchaseOrderItemSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PurchaseOrderItem
   */
  omit?: Prisma.PurchaseOrderItemOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PurchaseOrderItemInclude<ExtArgs> | null
  /**
   * Filter which PurchaseOrderItem to delete.
   */
  where: Prisma.PurchaseOrderItemWhereUniqueInput
}

/**
 * PurchaseOrderItem deleteMany
 */
export type PurchaseOrderItemDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which PurchaseOrderItems to delete
   */
  where?: Prisma.PurchaseOrderItemWhereInput
  /**
   * Limit how many PurchaseOrderItems to delete.
   */
  limit?: number
}

/**
 * PurchaseOrderItem without action
 */
export type PurchaseOrderItemDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PurchaseOrderItem
   */
  select?: Prisma.PurchaseOrderItemSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PurchaseOrderItem
   */
  omit?: Prisma.PurchaseOrderItemOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PurchaseOrderItemInclude<ExtArgs> | null
}
