
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * WARNING: This is an internal file that is subject to change!
 *
 * ðŸ›‘ Under no circumstances should you import this file directly! ðŸ›‘
 *
 * All exports from this file are wrapped under a `Prisma` namespace object in the browser.ts file.
 * While this enables partial backward compatibility, it is not part of the stable public API.
 *
 * If you are looking for your Models, Enums, and Input Types, please import them from the respective
 * model files in the `model` directory!
 */

import * as runtime from "@prisma/client/runtime/index-browser"

export type * from '../models.ts'
export type * from './prismaNamespace.ts'

export const Decimal = runtime.Decimal


export const NullTypes = {
  DbNull: runtime.objectEnumValues.classes.DbNull as (new (secret: never) => typeof runtime.objectEnumValues.instances.DbNull),
  JsonNull: runtime.objectEnumValues.classes.JsonNull as (new (secret: never) => typeof runtime.objectEnumValues.instances.JsonNull),
  AnyNull: runtime.objectEnumValues.classes.AnyNull as (new (secret: never) => typeof runtime.objectEnumValues.instances.AnyNull),
}
/**
 * Helper for filtering JSON entries that have `null` on the database (empty on the db)
 *
 * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
 */
export const DbNull = runtime.objectEnumValues.instances.DbNull
/**
 * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
 *
 * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
 */
export const JsonNull = runtime.objectEnumValues.instances.JsonNull
/**
 * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
 *
 * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
 */
export const AnyNull = runtime.objectEnumValues.instances.AnyNull


export const ModelName = {
  User: 'User',
  Vendor: 'Vendor',
  Customer: 'Customer',
  RawMaterial: 'RawMaterial',
  Product: 'Product',
  ProductFormula: 'ProductFormula',
  FormulaItem: 'FormulaItem',
  RawMaterialStock: 'RawMaterialStock',
  ProductStock: 'ProductStock',
  PurchaseOrder: 'PurchaseOrder',
  PurchaseOrderItem: 'PurchaseOrderItem',
  StockReceipt: 'StockReceipt',
  ProductionRun: 'ProductionRun',
  Invoice: 'Invoice',
  InvoiceItem: 'InvoiceItem',
  Payment: 'Payment',
  StockAdjustment: 'StockAdjustment',
  Commission: 'Commission',
  AuditLog: 'AuditLog'
} as const

export type ModelName = (typeof ModelName)[keyof typeof ModelName]

/*
 * Enums
 */

export const TransactionIsolationLevel = runtime.makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
} as const)

export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


export const UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  name: 'name',
  password: 'password',
  role: 'role'
} as const

export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


export const VendorScalarFieldEnum = {
  id: 'id',
  name: 'name',
  contactInfo: 'contactInfo'
} as const

export type VendorScalarFieldEnum = (typeof VendorScalarFieldEnum)[keyof typeof VendorScalarFieldEnum]


export const CustomerScalarFieldEnum = {
  id: 'id',
  name: 'name',
  type: 'type',
  latitude: 'latitude',
  longitude: 'longitude'
} as const

export type CustomerScalarFieldEnum = (typeof CustomerScalarFieldEnum)[keyof typeof CustomerScalarFieldEnum]


export const RawMaterialScalarFieldEnum = {
  id: 'id',
  name: 'name',
  unit: 'unit'
} as const

export type RawMaterialScalarFieldEnum = (typeof RawMaterialScalarFieldEnum)[keyof typeof RawMaterialScalarFieldEnum]


export const ProductScalarFieldEnum = {
  id: 'id',
  sku: 'sku',
  name: 'name',
  salePrice: 'salePrice'
} as const

export type ProductScalarFieldEnum = (typeof ProductScalarFieldEnum)[keyof typeof ProductScalarFieldEnum]


export const ProductFormulaScalarFieldEnum = {
  id: 'id',
  productId: 'productId'
} as const

export type ProductFormulaScalarFieldEnum = (typeof ProductFormulaScalarFieldEnum)[keyof typeof ProductFormulaScalarFieldEnum]


export const FormulaItemScalarFieldEnum = {
  id: 'id',
  formulaId: 'formulaId',
  rawMaterialId: 'rawMaterialId',
  quantityNeeded: 'quantityNeeded'
} as const

export type FormulaItemScalarFieldEnum = (typeof FormulaItemScalarFieldEnum)[keyof typeof FormulaItemScalarFieldEnum]


export const RawMaterialStockScalarFieldEnum = {
  id: 'id',
  rawMaterialId: 'rawMaterialId',
  quantity: 'quantity',
  batchNumber: 'batchNumber',
  expiryDate: 'expiryDate',
  qualityChecked: 'qualityChecked'
} as const

export type RawMaterialStockScalarFieldEnum = (typeof RawMaterialStockScalarFieldEnum)[keyof typeof RawMaterialStockScalarFieldEnum]


export const ProductStockScalarFieldEnum = {
  id: 'id',
  productId: 'productId',
  quantity: 'quantity',
  batchNumber: 'batchNumber'
} as const

export type ProductStockScalarFieldEnum = (typeof ProductStockScalarFieldEnum)[keyof typeof ProductStockScalarFieldEnum]


export const PurchaseOrderScalarFieldEnum = {
  id: 'id',
  vendorId: 'vendorId',
  status: 'status',
  createdAt: 'createdAt'
} as const

export type PurchaseOrderScalarFieldEnum = (typeof PurchaseOrderScalarFieldEnum)[keyof typeof PurchaseOrderScalarFieldEnum]


export const PurchaseOrderItemScalarFieldEnum = {
  id: 'id',
  purchaseOrderId: 'purchaseOrderId',
  rawMaterialId: 'rawMaterialId',
  quantityOrdered: 'quantityOrdered'
} as const

export type PurchaseOrderItemScalarFieldEnum = (typeof PurchaseOrderItemScalarFieldEnum)[keyof typeof PurchaseOrderItemScalarFieldEnum]


export const StockReceiptScalarFieldEnum = {
  id: 'id',
  purchaseOrderId: 'purchaseOrderId',
  receivedById: 'receivedById',
  notes: 'notes',
  createdAt: 'createdAt'
} as const

export type StockReceiptScalarFieldEnum = (typeof StockReceiptScalarFieldEnum)[keyof typeof StockReceiptScalarFieldEnum]


export const ProductionRunScalarFieldEnum = {
  id: 'id',
  productId: 'productId',
  quantityToProduce: 'quantityToProduce',
  quantityProduced: 'quantityProduced',
  status: 'status',
  notes: 'notes',
  createdAt: 'createdAt',
  completedAt: 'completedAt'
} as const

export type ProductionRunScalarFieldEnum = (typeof ProductionRunScalarFieldEnum)[keyof typeof ProductionRunScalarFieldEnum]


export const InvoiceScalarFieldEnum = {
  id: 'id',
  customerId: 'customerId',
  salesPersonId: 'salesPersonId',
  status: 'status',
  paymentMethod: 'paymentMethod',
  totalAmount: 'totalAmount',
  commissionAmount: 'commissionAmount',
  createdAt: 'createdAt'
} as const

export type InvoiceScalarFieldEnum = (typeof InvoiceScalarFieldEnum)[keyof typeof InvoiceScalarFieldEnum]


export const InvoiceItemScalarFieldEnum = {
  id: 'id',
  invoiceId: 'invoiceId',
  productId: 'productId',
  quantity: 'quantity',
  pricePerUnit: 'pricePerUnit'
} as const

export type InvoiceItemScalarFieldEnum = (typeof InvoiceItemScalarFieldEnum)[keyof typeof InvoiceItemScalarFieldEnum]


export const PaymentScalarFieldEnum = {
  id: 'id',
  invoiceId: 'invoiceId',
  amount: 'amount',
  transactionId: 'transactionId',
  status: 'status',
  createdAt: 'createdAt'
} as const

export type PaymentScalarFieldEnum = (typeof PaymentScalarFieldEnum)[keyof typeof PaymentScalarFieldEnum]


export const StockAdjustmentScalarFieldEnum = {
  id: 'id',
  productId: 'productId',
  rawMaterialId: 'rawMaterialId',
  quantity: 'quantity',
  reason: 'reason',
  adjustedById: 'adjustedById',
  createdAt: 'createdAt'
} as const

export type StockAdjustmentScalarFieldEnum = (typeof StockAdjustmentScalarFieldEnum)[keyof typeof StockAdjustmentScalarFieldEnum]


export const CommissionScalarFieldEnum = {
  id: 'id',
  salesPersonId: 'salesPersonId',
  invoiceId: 'invoiceId',
  amount: 'amount',
  status: 'status',
  createdAt: 'createdAt'
} as const

export type CommissionScalarFieldEnum = (typeof CommissionScalarFieldEnum)[keyof typeof CommissionScalarFieldEnum]


export const AuditLogScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  action: 'action',
  targetId: 'targetId',
  details: 'details',
  createdAt: 'createdAt'
} as const

export type AuditLogScalarFieldEnum = (typeof AuditLogScalarFieldEnum)[keyof typeof AuditLogScalarFieldEnum]


export const SortOrder = {
  asc: 'asc',
  desc: 'desc'
} as const

export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


export const NullableJsonNullValueInput = {
  DbNull: DbNull,
  JsonNull: JsonNull
} as const

export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


export const QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
} as const

export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


export const NullsOrder = {
  first: 'first',
  last: 'last'
} as const

export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


export const JsonNullValueFilter = {
  DbNull: DbNull,
  JsonNull: JsonNull,
  AnyNull: AnyNull
} as const

export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]

