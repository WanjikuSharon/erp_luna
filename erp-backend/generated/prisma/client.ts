
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file should be your main import to use Prisma. Through it you get access to all the models, enums, and input types.
 * If you're looking for something you can import in the client-side of your application, please refer to the `browser.ts` file instead.
 * 
 * ðŸŸ¢ You can import this file directly.
 */

import * as process from 'node:process'
import * as path from 'node:path'
import { fileURLToPath } from 'node:url'
globalThis['__dirname'] = path.dirname(fileURLToPath(import.meta.url))

import * as runtime from "@prisma/client/runtime/library"
import * as $Enums from "./enums.ts"
import * as $Class from "./internal/class.ts"
import * as Prisma from "./internal/prismaNamespace.ts"

export * as $Enums from './enums.ts'
export * from "./enums.ts"
/**
 * ## Prisma Client
 * 
 * Type-safe database client for TypeScript
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Users
 * const users = await prisma.user.findMany()
 * ```
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export const PrismaClient = $Class.getPrismaClientClass(__dirname)
export type PrismaClient<LogOpts extends Prisma.LogLevel = never, OmitOpts extends Prisma.PrismaClientOptions["omit"] = Prisma.PrismaClientOptions["omit"], ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = $Class.PrismaClient<LogOpts, OmitOpts, ExtArgs>
export { Prisma }


// file annotations for bundling tools to include these files
path.join(__dirname, "query_engine-windows.dll.node")
path.join(process.cwd(), "generated/prisma/query_engine-windows.dll.node")

/**
 * Model User
 * 
 */
export type User = Prisma.UserModel
/**
 * Model Vendor
 * 
 */
export type Vendor = Prisma.VendorModel
/**
 * Model Customer
 * 
 */
export type Customer = Prisma.CustomerModel
/**
 * Model RawMaterial
 * 
 */
export type RawMaterial = Prisma.RawMaterialModel
/**
 * Model Product
 * 
 */
export type Product = Prisma.ProductModel
/**
 * Model ProductFormula
 * 
 */
export type ProductFormula = Prisma.ProductFormulaModel
/**
 * Model FormulaItem
 * 
 */
export type FormulaItem = Prisma.FormulaItemModel
/**
 * Model RawMaterialStock
 * 
 */
export type RawMaterialStock = Prisma.RawMaterialStockModel
/**
 * Model ProductStock
 * 
 */
export type ProductStock = Prisma.ProductStockModel
/**
 * Model PurchaseOrder
 * 
 */
export type PurchaseOrder = Prisma.PurchaseOrderModel
/**
 * Model PurchaseOrderItem
 * 
 */
export type PurchaseOrderItem = Prisma.PurchaseOrderItemModel
/**
 * Model StockReceipt
 * 
 */
export type StockReceipt = Prisma.StockReceiptModel
/**
 * Model ProductionRun
 * 
 */
export type ProductionRun = Prisma.ProductionRunModel
/**
 * Model Invoice
 * 
 */
export type Invoice = Prisma.InvoiceModel
/**
 * Model InvoiceItem
 * 
 */
export type InvoiceItem = Prisma.InvoiceItemModel
/**
 * Model Payment
 * 
 */
export type Payment = Prisma.PaymentModel
/**
 * Model StockAdjustment
 * 
 */
export type StockAdjustment = Prisma.StockAdjustmentModel
/**
 * Model Commission
 * 
 */
export type Commission = Prisma.CommissionModel
/**
 * Model AuditLog
 * 
 */
export type AuditLog = Prisma.AuditLogModel
